@page "/orders"
@inject HttpClient Http

<PageTitle>Orders</PageTitle>

<h1>Orders</h1>

@if (orders == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ordered On</th>
                <th>Customer Name</th>
                <th>Location</th>
                <th>Length</th>
                <th>Width</th>
                <th>Height</th>
                <th>Weight</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in orders)
            {
                <tr>
                    <td>@order.OrderedOn</td>
                    <td>@order.CustomerName</td>
                    <td>@order.Location</td>
                    <td>@order.Length.Meters</td>
                    <td>@order.Width.Meters</td>
                    <td>@order.Height.Meters</td>
                    <td>@order.Weight.Kilograms</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private OrderViewModel[]? orders;

    protected override async Task OnInitializedAsync()
    {
        var options = new JsonSerializerOptions(JsonSerializerDefaults.Web).UseIronType();
        orders = await Http.GetFromJsonAsync<OrderViewModel[]>("orders", options);
    }
}
